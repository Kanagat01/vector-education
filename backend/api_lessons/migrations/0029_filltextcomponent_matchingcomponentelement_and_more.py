# Generated by Django 5.0.2 on 2024-05-23 00:24

import backend.global_function
import django.db.models.deletion
import protected_media.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api_lessons', '0028_delete_audiocomponent_delete_bluecardcomponent_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='FillTextComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Заполните текст', max_length=200, verbose_name='Заголовок')),
            ],
            options={
                'verbose_name': 'Заполните текст компонент',
                'verbose_name_plural': 'Заполните текст компоненты',
            },
        ),
        migrations.CreateModel(
            name='MatchingComponentElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200, verbose_name='Текст элемента')),
                ('image', protected_media.models.ProtectedImageField(blank=True, null=True, storage=protected_media.models.ProtectedFileSystemStorage(), upload_to='matching_elements/', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Элемент соединения',
                'verbose_name_plural': 'Элементы соединения',
            },
        ),
        migrations.CreateModel(
            name='FillTextLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_before', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Текст')),
                ('put_words', models.BooleanField(default=False, verbose_name='Подставить слова')),
                ('answer', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Ответ (оставьте пустым если только текст )')),
                ('text_after', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Текст после')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='api_lessons.filltextcomponent', verbose_name='Компонент')),
            ],
            options={
                'verbose_name': 'Строка компонента заполните текст',
                'verbose_name_plural': 'Строки компонента заполните текст',
            },
        ),
        migrations.CreateModel(
            name='LessonPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(verbose_name='Порядок страницы в уроке')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='api_lessons.lesson', verbose_name='Урок')),
            ],
            options={
                'verbose_name': 'Страница урока',
                'verbose_name_plural': 'Страницы урока',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='LessonPageElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(verbose_name='Порядок элемента на странице')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elements', to='api_lessons.lessonpage', verbose_name='Страница')),
            ],
            options={
                'verbose_name': 'Элемент страницы урока',
                'verbose_name_plural': 'Элементы страницы урока',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ImageComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default='Изображение', max_length=200, null=True, verbose_name='Описание')),
                ('image', protected_media.models.ProtectedImageField(storage=protected_media.models.ProtectedFileSystemStorage(), upload_to='images/', verbose_name='Изображение')),
                ('lesson_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_components', to='api_lessons.lessonpageelement', verbose_name='Страница урока')),
            ],
            options={
                'verbose_name': 'Изображение компонент',
                'verbose_name_plural': 'Изображения компоненты',
            },
        ),
        migrations.AddField(
            model_name='filltextcomponent',
            name='lesson_page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_components', to='api_lessons.lessonpageelement', verbose_name='Страница урока'),
        ),
        migrations.CreateModel(
            name='BlueCardComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(default='Текст', verbose_name='Текст')),
                ('lesson_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_components', to='api_lessons.lessonpageelement', verbose_name='Страница урока')),
            ],
            options={
                'verbose_name': 'Blue Card компонент',
                'verbose_name_plural': 'Blue Card компоненты',
            },
        ),
        migrations.CreateModel(
            name='AudioComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Аудио', max_length=200, verbose_name='Заголовок')),
                ('audio', protected_media.models.ProtectedFileField(storage=protected_media.models.ProtectedFileSystemStorage(), upload_to=backend.global_function.PathAndRename('audio/'), verbose_name='Аудио файл')),
                ('lesson_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_components', to='api_lessons.lessonpageelement', verbose_name='Страница урока')),
            ],
            options={
                'verbose_name': 'Аудио компонент',
                'verbose_name_plural': 'Аудио компоненты',
            },
        ),
        migrations.CreateModel(
            name='MatchingComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Соедините элементы', max_length=200, verbose_name='Заголовок')),
                ('lesson_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_components', to='api_lessons.lessonpageelement', verbose_name='Страница урока')),
            ],
            options={
                'verbose_name': 'Соедините элементы компонент',
                'verbose_name_plural': 'Соедините элементы компоненты',
            },
        ),
        migrations.CreateModel(
            name='MatchingComponentElementCouple',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='first_element', to='api_lessons.matchingcomponentelement', verbose_name='Первый элемент')),
                ('second_element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='second_element', to='api_lessons.matchingcomponentelement', verbose_name='Второй элемент')),
            ],
            options={
                'verbose_name': 'Пара элементов соединения',
                'verbose_name_plural': 'Пары элементов соединения',
            },
        ),
        migrations.CreateModel(
            name='PutInOrderComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Поставьте в правильном порядке', max_length=200, verbose_name='Заголовок')),
                ('lesson_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_components', to='api_lessons.lessonpageelement', verbose_name='Страница урока')),
            ],
            options={
                'verbose_name': 'Поставьте в правильном порядке компонент',
                'verbose_name_plural': 'Поставьте в правильном порядке компоненты',
            },
        ),
        migrations.CreateModel(
            name='PutInOrderComponentElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200, verbose_name='Текст элемента')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elements', to='api_lessons.putinordercomponent', verbose_name='Компонент')),
            ],
            options={
                'verbose_name': 'Элемент компонента поставьте в правильном порядке',
                'verbose_name_plural': 'Элементы компонента поставьте в правильном порядке',
            },
        ),
        migrations.CreateModel(
            name='QuestionComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=2000, verbose_name='Текст вопроса')),
                ('lesson_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_components', to='api_lessons.lessonpageelement', verbose_name='Страница урока')),
            ],
            options={
                'verbose_name': 'Вопрос компонент',
                'verbose_name_plural': 'Вопросы компоненты',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='QuestionAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=2000, verbose_name='Ответ')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Правильный ответ')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='api_lessons.questioncomponent', verbose_name='Вопрос')),
            ],
            options={
                'verbose_name': 'Ответ на вопрос',
                'verbose_name_plural': 'Ответы на вопросы',
            },
        ),
        migrations.CreateModel(
            name='RecordAudioComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_components', to='api_lessons.lessonpageelement', verbose_name='Страница урока')),
            ],
            options={
                'verbose_name': 'Запись аудио компонент',
                'verbose_name_plural': 'Запись аудио компоненты',
            },
        ),
        migrations.CreateModel(
            name='TextComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('text', models.TextField(verbose_name='Текст')),
                ('lesson_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_components', to='api_lessons.lessonpageelement', verbose_name='Страница урока')),
            ],
            options={
                'verbose_name': 'Текст компонент',
                'verbose_name_plural': 'Текст компоненты',
            },
        ),
        migrations.CreateModel(
            name='UserRecordAudioComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='audio/', verbose_name='Аудио файл')),
                ('teacher_comment', models.TextField(blank=True, null=True, verbose_name='Комментарий учителя')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_records', to='api_lessons.recordaudiocomponent', verbose_name='Компонент')),
            ],
            options={
                'verbose_name': 'Запись аудио компонент',
                'verbose_name_plural': 'Запись аудио компоненты',
            },
        ),
        migrations.CreateModel(
            name='VideoComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=2000, verbose_name='Описание')),
                ('video_url', models.URLField(verbose_name='Ссылка на видео')),
                ('lesson_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_components', to='api_lessons.lessonpageelement', verbose_name='Страница урока')),
            ],
            options={
                'verbose_name': 'Видео компонент',
                'verbose_name_plural': 'Видео компоненты',
            },
        ),
    ]
